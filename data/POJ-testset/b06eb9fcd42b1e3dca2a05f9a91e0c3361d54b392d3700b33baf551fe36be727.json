{
    "2247bf5312764ad5866b9fae2ce2999e": {
        "token_sequence": [
            "endbr64",
            "bnd",
            "CONST"
        ],
        "call_to": {},
        "call_external": {},
        "function_name": "__cxa_finalize",
        "function_addr": 4256
    },
    "47235801c9ee4cc19989cf4a8fbdd601": {
        "token_sequence": [
            "endbr64",
            "bnd",
            "CONST"
        ],
        "call_to": {},
        "call_external": {},
        "function_name": ".printf",
        "function_addr": 4272
    },
    "0b0dec7fcf9a4be296c828abcb434172": {
        "token_sequence": [
            "endbr64",
            "bnd",
            "CONST"
        ],
        "call_to": {},
        "call_external": {},
        "function_name": ".strlen",
        "function_addr": 4288
    },
    "30ceb5f444e9497d8e17d814faae508f": {
        "token_sequence": [
            "endbr64",
            "bnd",
            "CONST"
        ],
        "call_to": {},
        "call_external": {},
        "function_name": ".__cxa_atexit",
        "function_addr": 4304
    },
    "2795ff4d8750435d8192b21e1d40ce0f": {
        "token_sequence": [
            "endbr64",
            "bnd",
            "CONST"
        ],
        "call_to": {},
        "call_external": {},
        "function_name": ".__stack_chk_fail",
        "function_addr": 4320
    },
    "2be16d5a74c0469baafa37d3bd099d6d": {
        "token_sequence": [
            "endbr64",
            "bnd",
            "CONST"
        ],
        "call_to": {},
        "call_external": {},
        "function_name": ".__isoc99_scanf",
        "function_addr": 4336
    },
    "b4dacaef1c064062ad34fd29466c2b78": {
        "token_sequence": [
            "endbr64",
            "bnd",
            "CONST"
        ],
        "call_to": {},
        "call_external": {},
        "function_name": ".putchar",
        "function_addr": 4352
    },
    "69e2b1dc3bc749d687b11128c24cbb22": {
        "token_sequence": [
            "endbr64",
            "bnd",
            "CONST"
        ],
        "call_to": {},
        "call_external": {},
        "function_name": "._ZNSt8ios_base4InitC1Ev",
        "function_addr": 4368
    },
    "36bcd72519b543fa8000bdbcfe861a8c": {
        "token_sequence": [
            "endbr64",
            "xor",
            "ebp",
            "ebp",
            "mov",
            "r9",
            "rdx",
            "pop",
            "rsi",
            "mov",
            "rdx",
            "rsp",
            "and",
            "rsp",
            "CONST",
            "push",
            "rax",
            "push",
            "rsp",
            "xor",
            "r8d",
            "r8d",
            "xor",
            "ecx",
            "ecx",
            "lea",
            "rdi",
            "main",
            "call",
            "callfunc_xxx",
            "hlt"
        ],
        "call_to": {},
        "call_external": {
            "__libc_start_main": [
                29
            ]
        },
        "function_name": "_start",
        "function_addr": 4384
    },
    "7479c94a40ac4573ad7fa0291a0e8fd0": {
        "token_sequence": [
            "lea",
            "rdi",
            "CONST",
            "lea",
            "rax",
            "CONST",
            "cmp",
            "rax",
            "rdi",
            "jz",
            "JUMP_ADDR_21",
            "mov",
            "rax",
            "callfunc_xxx",
            "test",
            "rax",
            "rax",
            "jz",
            "JUMP_ADDR_21",
            "jmp",
            "rax",
            "retn"
        ],
        "call_to": {},
        "call_external": {
            "_ITM_deregisterTMCloneTable": [
                13
            ]
        },
        "function_name": "deregister_tm_clones",
        "function_addr": 4432
    },
    "394832cb9ddc45059496849cddae4b4d": {
        "token_sequence": [
            "lea",
            "rdi",
            "CONST",
            "lea",
            "rsi",
            "CONST",
            "sub",
            "rsi",
            "rdi",
            "mov",
            "rax",
            "rsi",
            "shr",
            "rsi",
            "CONST",
            "sar",
            "rax",
            "CONST",
            "add",
            "rsi",
            "rax",
            "sar",
            "rsi",
            "CONST",
            "jz",
            "JUMP_ADDR_36",
            "mov",
            "rax",
            "callfunc_xxx",
            "test",
            "rax",
            "rax",
            "jz",
            "JUMP_ADDR_36",
            "jmp",
            "rax",
            "retn"
        ],
        "call_to": {},
        "call_external": {
            "_ITM_registerTMCloneTable": [
                28
            ]
        },
        "function_name": "register_tm_clones",
        "function_addr": 4480
    },
    "09fca6a5bc5748e1b514bc60c382ebca": {
        "token_sequence": [
            "endbr64",
            "cmp",
            "cs:xxx",
            "CONST",
            "jnz",
            "JUMP_ADDR_29",
            "push",
            "rbp",
            "cmp",
            "callfunc_xxx",
            "CONST",
            "mov",
            "rbp",
            "rsp",
            "jz",
            "JUMP_ADDR_21",
            "mov",
            "rdi",
            "cs:xxx",
            "call",
            "callfunc_xxx",
            "call",
            "callfunc_xxx",
            "mov",
            "cs:xxx",
            "CONST",
            "pop",
            "rbp",
            "retn",
            "retn"
        ],
        "call_to": {
            "2247bf5312764ad5866b9fae2ce2999e": [
                20
            ],
            "7479c94a40ac4573ad7fa0291a0e8fd0": [
                22
            ]
        },
        "call_external": {
            "__imp___cxa_finalize": [
                9
            ]
        },
        "function_name": "__do_global_dtors_aux",
        "function_addr": 4544
    },
    "0f0dbb3ea05a4ac6a56991290fe8b9a9": {
        "token_sequence": [
            "endbr64",
            "jmp",
            "UNK_ADDR"
        ],
        "call_to": {
            "394832cb9ddc45059496849cddae4b4d": [
                2
            ]
        },
        "call_external": {},
        "function_name": "frame_dummy",
        "function_addr": 4608
    },
    "7785d5d3d0a54e2fa3b99d17eb760a2b": {
        "token_sequence": [
            "endbr64",
            "push",
            "rbp",
            "mov",
            "rbp",
            "rsp",
            "sub",
            "rsp",
            "CONST",
            "mov",
            "rax",
            "fs:xxx",
            "mov",
            "[rbp+var_xxx]",
            "rax",
            "xor",
            "eax",
            "eax",
            "lea",
            "rdx",
            "[rbp+var_xxx]",
            "mov",
            "eax",
            "CONST",
            "mov",
            "ecx",
            "CONST",
            "mov",
            "rdi",
            "rdx",
            "rep",
            "CONST",
            "mov",
            "rdx",
            "rdi",
            "mov",
            "[rdx]",
            "eax",
            "add",
            "rdx",
            "CONST",
            "mov",
            "[rdx]",
            "ax",
            "add",
            "rdx",
            "CONST",
            "lea",
            "rax",
            "[rbp+var_xxx]",
            "mov",
            "rsi",
            "rax",
            "lea",
            "rax",
            "aD",
            "mov",
            "rdi",
            "rax",
            "mov",
            "eax",
            "CONST",
            "call",
            "callfunc_xxx",
            "lea",
            "rax",
            "[rbp+CONST_VAR]",
            "mov",
            "rsi",
            "rax",
            "lea",
            "rax",
            "aS",
            "mov",
            "rdi",
            "rax",
            "mov",
            "eax",
            "CONST",
            "call",
            "callfunc_xxx",
            "lea",
            "rax",
            "[rbp+CONST_VAR]",
            "mov",
            "rdi",
            "rax",
            "call",
            "callfunc_xxx",
            "mov",
            "[rbp+var_xxx]",
            "eax",
            "mov",
            "[rbp+var_xxx]",
            "CONST",
            "mov",
            "[rbp+var_xxx]",
            "CONST",
            "jmp",
            "JUMP_ADDR_117",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "cdqe",
            "movzx",
            "edx",
            "[rbp+rax+CONST_VAR]",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "cdqe",
            "mov",
            "[rbp+rax+var_xxx]",
            "dl",
            "add",
            "[rbp+var_xxx]",
            "CONST",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "cmp",
            "[rbp+var_xxx]",
            "eax",
            "jl",
            "JUMP_ADDR_100",
            "mov",
            "[rbp+var_xxx]",
            "CONST",
            "mov",
            "[rbp+var_xxx]",
            "CONST",
            "mov",
            "[rbp+var_xxx]",
            "CONST",
            "jmp",
            "JUMP_ADDR_435",
            "mov",
            "[rbp+var_xxx]",
            "CONST",
            "mov",
            "[rbp+var_xxx]",
            "CONST",
            "jmp",
            "JUMP_ADDR_291",
            "mov",
            "[rbp+var_xxx]",
            "CONST",
            "mov",
            "[rbp+var_xxx]",
            "CONST",
            "jmp",
            "JUMP_ADDR_212",
            "mov",
            "edx",
            "[rbp+var_xxx]",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "add",
            "eax",
            "edx",
            "cdqe",
            "movzx",
            "ecx",
            "[rbp+rax+CONST_VAR]",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rsi",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rdx",
            "eax",
            "mov",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rbp",
            "add",
            "rax",
            "rsi",
            "sub",
            "rax",
            "CONST",
            "movzx",
            "eax",
            "[rax]",
            "cmp",
            "cl",
            "al",
            "jz",
            "JUMP_ADDR_209",
            "add",
            "[rbp+var_xxx]",
            "CONST",
            "add",
            "[rbp+var_xxx]",
            "CONST",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "cmp",
            "[rbp+var_xxx]",
            "eax",
            "jl",
            "JUMP_ADDR_152",
            "cmp",
            "[rbp+var_xxx]",
            "CONST",
            "jnz",
            "JUMP_ADDR_288",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rdx",
            "eax",
            "mov",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rbp",
            "sub",
            "rax",
            "CONST",
            "movzx",
            "eax",
            "[rax]",
            "add",
            "eax",
            "CONST",
            "mov",
            "ecx",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rdx",
            "eax",
            "mov",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rbp",
            "sub",
            "rax",
            "CONST",
            "mov",
            "[rax]",
            "cl",
            "add",
            "[rbp+var_xxx]",
            "CONST",
            "add",
            "[rbp+var_xxx]",
            "CONST",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "cmp",
            "eax",
            "[rbp+var_xxx]",
            "jl",
            "JUMP_ADDR_144",
            "cmp",
            "[rbp+var_xxx]",
            "CONST",
            "jnz",
            "JUMP_ADDR_432",
            "mov",
            "[rbp+var_xxx]",
            "CONST",
            "jmp",
            "JUMP_ADDR_361",
            "mov",
            "edx",
            "[rbp+var_xxx]",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "add",
            "eax",
            "edx",
            "cdqe",
            "movzx",
            "edx",
            "[rbp+rax+CONST_VAR]",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rsi",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rcx",
            "eax",
            "mov",
            "rax",
            "rcx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rcx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rbp",
            "add",
            "rax",
            "rsi",
            "sub",
            "rax",
            "CONST",
            "mov",
            "[rax]",
            "dl",
            "add",
            "[rbp+var_xxx]",
            "CONST",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "cmp",
            "[rbp+var_xxx]",
            "eax",
            "jl",
            "JUMP_ADDR_309",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rdx",
            "eax",
            "mov",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rbp",
            "sub",
            "rax",
            "CONST",
            "mov",
            "[rax]",
            "CONST",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "mov",
            "ecx",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rdx",
            "eax",
            "mov",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rbp",
            "sub",
            "rax",
            "CONST",
            "mov",
            "[rax]",
            "cl",
            "add",
            "[rbp+var_xxx]",
            "CONST",
            "add",
            "[rbp+var_xxx]",
            "CONST",
            "mov",
            "edx",
            "[rbp+var_xxx]",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "sub",
            "eax",
            "edx",
            "cmp",
            "[rbp+var_xxx]",
            "eax",
            "jle",
            "JUMP_ADDR_136",
            "mov",
            "[rbp+var_xxx]",
            "CONST",
            "jmp",
            "JUMP_ADDR_EXCEEDED",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "add",
            "eax",
            "CONST",
            "mov",
            "[rbp+var_xxx]",
            "eax",
            "jmp",
            "JUMP_ADDR_EXCEEDED",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rdx",
            "eax",
            "mov",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rbp",
            "sub",
            "rax",
            "CONST",
            "movzx",
            "ecx",
            "[rax]",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rdx",
            "eax",
            "mov",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rbp",
            "sub",
            "rax",
            "CONST",
            "movzx",
            "eax",
            "[rax]",
            "cmp",
            "cl",
            "al",
            "jle",
            "JUMP_ADDR_EXCEEDED",
            "mov",
            "[rbp+var_xxx]",
            "CONST",
            "jmp",
            "JUMP_ADDR_EXCEEDED",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rcx",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rdx",
            "eax",
            "mov",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rbp",
            "add",
            "rax",
            "rcx",
            "sub",
            "rax",
            "CONST",
            "movzx",
            "edx",
            "[rax]",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "cdqe",
            "mov",
            "[rbp+rax+var_xxx]",
            "dl",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rcx",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rdx",
            "eax",
            "mov",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rbp",
            "add",
            "rax",
            "rcx",
            "sub",
            "rax",
            "CONST",
            "movzx",
            "edx",
            "[rax]",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rsi",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rcx",
            "eax",
            "mov",
            "rax",
            "rcx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rcx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rbp",
            "add",
            "rax",
            "rsi",
            "sub",
            "rax",
            "CONST",
            "mov",
            "[rax]",
            "dl",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "cdqe",
            "movzx",
            "edx",
            "[rbp+rax+var_xxx]",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rsi",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rcx",
            "eax",
            "mov",
            "rax",
            "rcx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rcx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rbp",
            "add",
            "rax",
            "rsi",
            "sub",
            "rax",
            "CONST",
            "mov",
            "[rax]",
            "dl",
            "add",
            "[rbp+var_xxx]",
            "CONST",
            "cmp",
            "[rbp+var_xxx]",
            "CONST",
            "jle",
            "JUMP_ADDR_EXCEEDED",
            "add",
            "[rbp+var_xxx]",
            "CONST",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "cmp",
            "eax",
            "[rbp+var_xxx]",
            "jl",
            "JUMP_ADDR_465",
            "add",
            "[rbp+var_xxx]",
            "CONST",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "sub",
            "eax",
            "CONST",
            "cmp",
            "[rbp+var_xxx]",
            "eax",
            "jl",
            "JUMP_ADDR_454",
            "movzx",
            "eax",
            "[rbp+var_xxx]",
            "cmp",
            "al",
            "CONST",
            "jnz",
            "JUMP_ADDR_EXCEEDED",
            "lea",
            "rax",
            "CONST",
            "mov",
            "rdi",
            "rax",
            "mov",
            "eax",
            "CONST",
            "call",
            "callfunc_xxx",
            "jmp",
            "JUMP_ADDR_EXCEEDED",
            "movzx",
            "eax",
            "[rbp+var_xxx]",
            "movsx",
            "eax",
            "al",
            "mov",
            "esi",
            "eax",
            "lea",
            "rax",
            "aD",
            "mov",
            "rdi",
            "rax",
            "mov",
            "eax",
            "CONST",
            "call",
            "callfunc_xxx",
            "mov",
            "[rbp+var_xxx]",
            "CONST",
            "mov",
            "[rbp+var_xxx]",
            "CONST",
            "jmp",
            "JUMP_ADDR_EXCEEDED",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rdx",
            "eax",
            "mov",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rbp",
            "sub",
            "rax",
            "CONST",
            "movzx",
            "ecx",
            "[rax]",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "sub",
            "eax",
            "CONST",
            "movsxd",
            "rdx",
            "eax",
            "mov",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rbp",
            "sub",
            "rax",
            "CONST",
            "movzx",
            "eax",
            "[rax]",
            "cmp",
            "cl",
            "al",
            "jnz",
            "JUMP_ADDR_EXCEEDED",
            "add",
            "[rbp+var_xxx]",
            "CONST",
            "add",
            "[rbp+var_xxx]",
            "CONST",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "cmp",
            "eax",
            "[rbp+var_xxx]",
            "jl",
            "JUMP_ADDR_EXCEEDED",
            "jmp",
            "JUMP_ADDR_EXCEEDED",
            "nop",
            "mov",
            "[rbp+var_xxx]",
            "CONST",
            "jmp",
            "JUMP_ADDR_EXCEEDED",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "add",
            "eax",
            "CONST",
            "mov",
            "[rbp+var_xxx]",
            "eax",
            "jmp",
            "JUMP_ADDR_EXCEEDED",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rdx",
            "eax",
            "mov",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rbp",
            "sub",
            "rax",
            "CONST",
            "movzx",
            "ecx",
            "[rax]",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rdx",
            "eax",
            "mov",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rbp",
            "sub",
            "rax",
            "CONST",
            "movzx",
            "eax",
            "[rax]",
            "cmp",
            "cl",
            "al",
            "jge",
            "JUMP_ADDR_EXCEEDED",
            "mov",
            "[rbp+var_xxx]",
            "CONST",
            "jmp",
            "JUMP_ADDR_EXCEEDED",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rcx",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rdx",
            "eax",
            "mov",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rbp",
            "add",
            "rax",
            "rcx",
            "sub",
            "rax",
            "CONST",
            "movzx",
            "edx",
            "[rax]",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "cdqe",
            "mov",
            "[rbp+rax+var_xxx]",
            "dl",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rcx",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rdx",
            "eax",
            "mov",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rbp",
            "add",
            "rax",
            "rcx",
            "sub",
            "rax",
            "CONST",
            "movzx",
            "edx",
            "[rax]",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rsi",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rcx",
            "eax",
            "mov",
            "rax",
            "rcx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rcx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rbp",
            "add",
            "rax",
            "rsi",
            "sub",
            "rax",
            "CONST",
            "mov",
            "[rax]",
            "dl",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "cdqe",
            "movzx",
            "edx",
            "[rbp+rax+var_xxx]",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rsi",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rcx",
            "eax",
            "mov",
            "rax",
            "rcx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rcx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rbp",
            "add",
            "rax",
            "rsi",
            "sub",
            "rax",
            "CONST",
            "mov",
            "[rax]",
            "dl",
            "add",
            "[rbp+var_xxx]",
            "CONST",
            "cmp",
            "[rbp+var_xxx]",
            "CONST",
            "jle",
            "JUMP_ADDR_EXCEEDED",
            "add",
            "[rbp+var_xxx]",
            "CONST",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "cmp",
            "eax",
            "[rbp+var_xxx]",
            "jl",
            "JUMP_ADDR_EXCEEDED",
            "add",
            "[rbp+var_xxx]",
            "CONST",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "sub",
            "eax",
            "CONST",
            "cmp",
            "[rbp+var_xxx]",
            "eax",
            "jl",
            "JUMP_ADDR_EXCEEDED",
            "mov",
            "[rbp+var_xxx]",
            "CONST",
            "jmp",
            "JUMP_ADDR_EXCEEDED",
            "mov",
            "edi",
            "CONST",
            "call",
            "callfunc_xxx",
            "mov",
            "[rbp+var_xxx]",
            "CONST",
            "jmp",
            "JUMP_ADDR_EXCEEDED",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rcx",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rdx",
            "eax",
            "mov",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rdx",
            "add",
            "rax",
            "rax",
            "add",
            "rax",
            "rbp",
            "add",
            "rax",
            "rcx",
            "sub",
            "rax",
            "CONST",
            "movzx",
            "eax",
            "[rax]",
            "movsx",
            "eax",
            "al",
            "mov",
            "edi",
            "eax",
            "call",
            "callfunc_xxx",
            "add",
            "[rbp+var_xxx]",
            "CONST",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "cmp",
            "[rbp+var_xxx]",
            "eax",
            "jl",
            "JUMP_ADDR_EXCEEDED",
            "add",
            "[rbp+var_xxx]",
            "CONST",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "cmp",
            "eax",
            "[rbp+var_xxx]",
            "jl",
            "JUMP_ADDR_EXCEEDED",
            "mov",
            "eax",
            "CONST",
            "mov",
            "rdx",
            "[rbp+var_xxx]",
            "sub",
            "rdx",
            "fs:xxx",
            "jz",
            "JUMP_ADDR_EXCEEDED",
            "call",
            "callfunc_xxx",
            "leave",
            "retn"
        ],
        "call_to": {
            "2be16d5a74c0469baafa37d3bd099d6d": [
                63,
                80
            ],
            "0b0dec7fcf9a4be296c828abcb434172": [
                88
            ],
            "47235801c9ee4cc19989cf4a8fbdd601": [
                738,
                760
            ],
            "b4dacaef1c064062ad34fd29466c2b78": [
                1128,
                1177
            ],
            "2795ff4d8750435d8192b21e1d40ce0f": [
                1212
            ]
        },
        "call_external": {},
        "function_name": "main",
        "function_addr": 4617
    },
    "b1f74935f49c45f6b406e2d5e071daf5": {
        "token_sequence": [
            "endbr64",
            "push",
            "rbp",
            "mov",
            "rbp",
            "rsp",
            "sub",
            "rsp",
            "CONST",
            "mov",
            "[rbp+var_xxx]",
            "edi",
            "mov",
            "[rbp+var_xxx]",
            "esi",
            "cmp",
            "[rbp+var_xxx]",
            "CONST",
            "jnz",
            "JUMP_ADDR_53",
            "cmp",
            "[rbp+var_xxx]",
            "CONST",
            "jnz",
            "JUMP_ADDR_53",
            "lea",
            "rax",
            "CONST",
            "mov",
            "rdi",
            "rax",
            "call",
            "callfunc_xxx",
            "lea",
            "rax",
            "CONST",
            "mov",
            "rdx",
            "rax",
            "lea",
            "rax",
            "CONST",
            "mov",
            "rsi",
            "rax",
            "mov",
            "rax",
            "callfunc_xxx",
            "mov",
            "rdi",
            "rax",
            "call",
            "callfunc_xxx",
            "nop",
            "leave",
            "retn"
        ],
        "call_to": {
            "69e2b1dc3bc749d687b11128c24cbb22": [
                32
            ],
            "30ceb5f444e9497d8e17d814faae508f": [
                52
            ]
        },
        "call_external": {
            "std::ios_base::Init::~Init()": [
                47
            ]
        },
        "function_name": "_Z41__static_initialization_and_destruction_0ii",
        "function_addr": 6520
    },
    "e626aad39d19491fa7448cd7403f1ebd": {
        "token_sequence": [
            "endbr64",
            "push",
            "rbp",
            "mov",
            "rbp",
            "rsp",
            "mov",
            "esi",
            "CONST",
            "mov",
            "edi",
            "CONST",
            "call",
            "callfunc_xxx",
            "pop",
            "rbp",
            "retn"
        ],
        "call_to": {
            "b1f74935f49c45f6b406e2d5e071daf5": [
                13
            ]
        },
        "call_external": {},
        "function_name": "_GLOBAL__sub_I_main",
        "function_addr": 6606
    }
}