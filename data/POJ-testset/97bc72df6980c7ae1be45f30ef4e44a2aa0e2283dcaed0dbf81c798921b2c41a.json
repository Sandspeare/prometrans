{
    "0a347bebf3f748dab04f3fefe684bb6d": {
        "token_sequence": [
            "endbr64",
            "bnd",
            "CONST"
        ],
        "call_to": {},
        "call_external": {},
        "function_name": "__cxa_finalize",
        "function_addr": 4224
    },
    "477403d4ef5341d784e1d29850128051": {
        "token_sequence": [
            "endbr64",
            "bnd",
            "CONST"
        ],
        "call_to": {},
        "call_external": {},
        "function_name": ".printf",
        "function_addr": 4240
    },
    "16c2bde27bb4456aaac412c68faaade8": {
        "token_sequence": [
            "endbr64",
            "bnd",
            "CONST"
        ],
        "call_to": {},
        "call_external": {},
        "function_name": ".__cxa_atexit",
        "function_addr": 4256
    },
    "01d82d860fbe47d5bb6bf59a18cc89c1": {
        "token_sequence": [
            "endbr64",
            "bnd",
            "CONST"
        ],
        "call_to": {},
        "call_external": {},
        "function_name": ".__stack_chk_fail",
        "function_addr": 4272
    },
    "876aa89699ec4a3b956c2f5c9cb6a58a": {
        "token_sequence": [
            "endbr64",
            "bnd",
            "CONST"
        ],
        "call_to": {},
        "call_external": {},
        "function_name": ".__isoc99_scanf",
        "function_addr": 4288
    },
    "a024e9d3532d411ebcf21609115d015d": {
        "token_sequence": [
            "endbr64",
            "bnd",
            "CONST"
        ],
        "call_to": {},
        "call_external": {},
        "function_name": "._ZNSt8ios_base4InitC1Ev",
        "function_addr": 4304
    },
    "b437853283e84b1c87412a94ba343d1a": {
        "token_sequence": [
            "endbr64",
            "xor",
            "ebp",
            "ebp",
            "mov",
            "r9",
            "rdx",
            "pop",
            "rsi",
            "mov",
            "rdx",
            "rsp",
            "and",
            "rsp",
            "CONST",
            "push",
            "rax",
            "push",
            "rsp",
            "xor",
            "r8d",
            "r8d",
            "xor",
            "ecx",
            "ecx",
            "lea",
            "rdi",
            "main",
            "call",
            "callfunc_xxx",
            "hlt"
        ],
        "call_to": {},
        "call_external": {
            "__libc_start_main": [
                29
            ]
        },
        "function_name": "_start",
        "function_addr": 4320
    },
    "6ecfc4f044aa44c081a0f22d86d6e713": {
        "token_sequence": [
            "lea",
            "rdi",
            "CONST",
            "lea",
            "rax",
            "CONST",
            "cmp",
            "rax",
            "rdi",
            "jz",
            "JUMP_ADDR_21",
            "mov",
            "rax",
            "callfunc_xxx",
            "test",
            "rax",
            "rax",
            "jz",
            "JUMP_ADDR_21",
            "jmp",
            "rax",
            "retn"
        ],
        "call_to": {},
        "call_external": {
            "_ITM_deregisterTMCloneTable": [
                13
            ]
        },
        "function_name": "deregister_tm_clones",
        "function_addr": 4368
    },
    "6bf960a3bd194a6696201af68754f171": {
        "token_sequence": [
            "lea",
            "rdi",
            "CONST",
            "lea",
            "rsi",
            "CONST",
            "sub",
            "rsi",
            "rdi",
            "mov",
            "rax",
            "rsi",
            "shr",
            "rsi",
            "CONST",
            "sar",
            "rax",
            "CONST",
            "add",
            "rsi",
            "rax",
            "sar",
            "rsi",
            "CONST",
            "jz",
            "JUMP_ADDR_36",
            "mov",
            "rax",
            "callfunc_xxx",
            "test",
            "rax",
            "rax",
            "jz",
            "JUMP_ADDR_36",
            "jmp",
            "rax",
            "retn"
        ],
        "call_to": {},
        "call_external": {
            "_ITM_registerTMCloneTable": [
                28
            ]
        },
        "function_name": "register_tm_clones",
        "function_addr": 4416
    },
    "c224712ca1234f7e97c984ed282d2638": {
        "token_sequence": [
            "endbr64",
            "cmp",
            "cs:xxx",
            "CONST",
            "jnz",
            "JUMP_ADDR_29",
            "push",
            "rbp",
            "cmp",
            "callfunc_xxx",
            "CONST",
            "mov",
            "rbp",
            "rsp",
            "jz",
            "JUMP_ADDR_21",
            "mov",
            "rdi",
            "cs:xxx",
            "call",
            "callfunc_xxx",
            "call",
            "callfunc_xxx",
            "mov",
            "cs:xxx",
            "CONST",
            "pop",
            "rbp",
            "retn",
            "retn"
        ],
        "call_to": {
            "0a347bebf3f748dab04f3fefe684bb6d": [
                20
            ],
            "6ecfc4f044aa44c081a0f22d86d6e713": [
                22
            ]
        },
        "call_external": {
            "__imp___cxa_finalize": [
                9
            ]
        },
        "function_name": "__do_global_dtors_aux",
        "function_addr": 4480
    },
    "2756ce8fc31b403f80cbb1c05a34c57c": {
        "token_sequence": [
            "endbr64",
            "jmp",
            "UNK_ADDR"
        ],
        "call_to": {
            "6bf960a3bd194a6696201af68754f171": [
                2
            ]
        },
        "call_external": {},
        "function_name": "frame_dummy",
        "function_addr": 4544
    },
    "a8a9355313ea46b688b85b82984a0329": {
        "token_sequence": [
            "endbr64",
            "push",
            "rbp",
            "mov",
            "rbp",
            "rsp",
            "sub",
            "rsp",
            "CONST",
            "mov",
            "rax",
            "fs:xxx",
            "mov",
            "[rbp+var_xxx]",
            "rax",
            "xor",
            "eax",
            "eax",
            "lea",
            "rax",
            "[rbp+var_xxx]",
            "mov",
            "rsi",
            "rax",
            "lea",
            "rax",
            "CONST",
            "mov",
            "rdi",
            "rax",
            "mov",
            "eax",
            "CONST",
            "call",
            "callfunc_xxx",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "cmp",
            "eax",
            "CONST",
            "jg",
            "JUMP_ADDR_74",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "test",
            "eax",
            "eax",
            "jle",
            "JUMP_ADDR_74",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "mov",
            "[rbp+var_xxx]",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "mov",
            "esi",
            "eax",
            "lea",
            "rax",
            "CONST",
            "mov",
            "rdi",
            "rax",
            "mov",
            "eax",
            "CONST",
            "call",
            "callfunc_xxx",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "cmp",
            "eax",
            "CONST",
            "jg",
            "JUMP_ADDR_156",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "cmp",
            "eax",
            "CONST",
            "jle",
            "JUMP_ADDR_156",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rdx",
            "eax",
            "imul",
            "rdx",
            "CONST",
            "shr",
            "rdx",
            "CONST",
            "sar",
            "edx",
            "CONST",
            "sar",
            "eax",
            "CONST",
            "mov",
            "ecx",
            "eax",
            "mov",
            "eax",
            "edx",
            "sub",
            "eax",
            "ecx",
            "mov",
            "[rbp+var_xxx]",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "imul",
            "edx",
            "eax",
            "+0Ah",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "add",
            "eax",
            "edx",
            "mov",
            "[rbp+var_xxx]",
            "eax",
            "mov",
            "edx",
            "[rbp+var_xxx]",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "mov",
            "esi",
            "eax",
            "lea",
            "rax",
            "aDD",
            "mov",
            "rdi",
            "rax",
            "mov",
            "eax",
            "CONST",
            "call",
            "callfunc_xxx",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "cmp",
            "eax",
            "CONST",
            "jg",
            "JUMP_ADDR_290",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "cmp",
            "eax",
            "CONST",
            "jle",
            "JUMP_ADDR_290",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rdx",
            "eax",
            "imul",
            "rdx",
            "CONST",
            "shr",
            "rdx",
            "CONST",
            "sar",
            "edx",
            "CONST",
            "sar",
            "eax",
            "CONST",
            "mov",
            "ecx",
            "eax",
            "mov",
            "eax",
            "edx",
            "sub",
            "eax",
            "ecx",
            "mov",
            "[rbp+var_xxx]",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "imul",
            "edx",
            "eax",
            "+64h",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "add",
            "eax",
            "edx",
            "movsxd",
            "rdx",
            "eax",
            "imul",
            "rdx",
            "CONST",
            "shr",
            "rdx",
            "CONST",
            "sar",
            "edx",
            "CONST",
            "sar",
            "eax",
            "CONST",
            "mov",
            "ecx",
            "eax",
            "mov",
            "eax",
            "edx",
            "sub",
            "eax",
            "ecx",
            "mov",
            "[rbp+var_xxx]",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "imul",
            "edx",
            "eax",
            "+64h",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "add",
            "edx",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "imul",
            "eax",
            "+0Ah",
            "add",
            "eax",
            "edx",
            "mov",
            "[rbp+var_xxx]",
            "eax",
            "mov",
            "ecx",
            "[rbp+var_xxx]",
            "mov",
            "edx",
            "[rbp+var_xxx]",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "mov",
            "esi",
            "eax",
            "lea",
            "rax",
            "aDDD",
            "mov",
            "rdi",
            "rax",
            "mov",
            "eax",
            "CONST",
            "call",
            "callfunc_xxx",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "cmp",
            "eax",
            "CONST",
            "jg",
            "JUMP_ADDR_488",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "cmp",
            "eax",
            "CONST",
            "jle",
            "JUMP_ADDR_488",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rdx",
            "eax",
            "imul",
            "rdx",
            "CONST",
            "shr",
            "rdx",
            "CONST",
            "sar",
            "edx",
            "CONST",
            "sar",
            "eax",
            "CONST",
            "mov",
            "ecx",
            "eax",
            "mov",
            "eax",
            "edx",
            "sub",
            "eax",
            "ecx",
            "mov",
            "[rbp+var_xxx]",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "imul",
            "edx",
            "eax",
            "CONST",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "add",
            "eax",
            "edx",
            "movsxd",
            "rdx",
            "eax",
            "imul",
            "rdx",
            "CONST",
            "shr",
            "rdx",
            "CONST",
            "sar",
            "edx",
            "CONST",
            "sar",
            "eax",
            "CONST",
            "mov",
            "ecx",
            "eax",
            "mov",
            "eax",
            "edx",
            "sub",
            "eax",
            "ecx",
            "mov",
            "[rbp+var_xxx]",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "imul",
            "edx",
            "eax",
            "CONST",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "add",
            "edx",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "imul",
            "eax",
            "+64h",
            "add",
            "eax",
            "edx",
            "movsxd",
            "rdx",
            "eax",
            "imul",
            "rdx",
            "CONST",
            "shr",
            "rdx",
            "CONST",
            "sar",
            "edx",
            "CONST",
            "sar",
            "eax",
            "CONST",
            "mov",
            "ecx",
            "eax",
            "mov",
            "eax",
            "edx",
            "sub",
            "eax",
            "ecx",
            "mov",
            "[rbp+var_xxx]",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "imul",
            "edx",
            "eax",
            "CONST",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "add",
            "edx",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "imul",
            "eax",
            "+64h",
            "add",
            "edx",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "imul",
            "eax",
            "+0Ah",
            "add",
            "eax",
            "edx",
            "mov",
            "[rbp+var_xxx]",
            "eax",
            "mov",
            "esi",
            "[rbp+var_xxx]",
            "mov",
            "ecx",
            "[rbp+var_xxx]",
            "mov",
            "edx",
            "[rbp+var_xxx]",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "mov",
            "r8d",
            "esi",
            "mov",
            "esi",
            "eax",
            "lea",
            "rax",
            "CONST",
            "mov",
            "rdi",
            "rax",
            "mov",
            "eax",
            "CONST",
            "call",
            "callfunc_xxx",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "cmp",
            "eax",
            "CONST",
            "jg",
            "JUMP_ADDR_EXCEEDED",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "cmp",
            "eax",
            "CONST",
            "jle",
            "JUMP_ADDR_EXCEEDED",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "movsxd",
            "rdx",
            "eax",
            "imul",
            "rdx",
            "CONST",
            "shr",
            "rdx",
            "CONST",
            "sar",
            "edx",
            "CONST",
            "sar",
            "eax",
            "CONST",
            "mov",
            "ecx",
            "eax",
            "mov",
            "eax",
            "edx",
            "sub",
            "eax",
            "ecx",
            "mov",
            "[rbp+var_xxx]",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "imul",
            "edx",
            "eax",
            "CONST",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "add",
            "eax",
            "edx",
            "movsxd",
            "rdx",
            "eax",
            "imul",
            "rdx",
            "CONST",
            "shr",
            "rdx",
            "CONST",
            "sar",
            "edx",
            "CONST",
            "sar",
            "eax",
            "CONST",
            "mov",
            "ecx",
            "eax",
            "mov",
            "eax",
            "edx",
            "sub",
            "eax",
            "ecx",
            "mov",
            "[rbp+var_xxx]",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "imul",
            "edx",
            "eax",
            "CONST",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "add",
            "edx",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "imul",
            "eax",
            "CONST",
            "add",
            "eax",
            "edx",
            "movsxd",
            "rdx",
            "eax",
            "imul",
            "rdx",
            "CONST",
            "shr",
            "rdx",
            "CONST",
            "sar",
            "edx",
            "CONST",
            "sar",
            "eax",
            "CONST",
            "mov",
            "ecx",
            "eax",
            "mov",
            "eax",
            "edx",
            "sub",
            "eax",
            "ecx",
            "mov",
            "[rbp+var_xxx]",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "imul",
            "edx",
            "eax",
            "CONST",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "add",
            "edx",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "imul",
            "eax",
            "CONST",
            "add",
            "edx",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "imul",
            "eax",
            "+64h",
            "add",
            "eax",
            "edx",
            "movsxd",
            "rdx",
            "eax",
            "imul",
            "rdx",
            "CONST",
            "shr",
            "rdx",
            "CONST",
            "sar",
            "edx",
            "CONST",
            "sar",
            "eax",
            "CONST",
            "mov",
            "ecx",
            "eax",
            "mov",
            "eax",
            "edx",
            "sub",
            "eax",
            "ecx",
            "mov",
            "[rbp+var_xxx]",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "imul",
            "edx",
            "eax",
            "CONST",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "add",
            "edx",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "imul",
            "eax",
            "CONST",
            "add",
            "edx",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "imul",
            "eax",
            "+64h",
            "add",
            "edx",
            "eax",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "imul",
            "eax",
            "+0Ah",
            "add",
            "eax",
            "edx",
            "mov",
            "[rbp+var_xxx]",
            "eax",
            "mov",
            "edi",
            "[rbp+var_xxx]",
            "mov",
            "esi",
            "[rbp+var_xxx]",
            "mov",
            "ecx",
            "[rbp+var_xxx]",
            "mov",
            "edx",
            "[rbp+var_xxx]",
            "mov",
            "eax",
            "[rbp+var_xxx]",
            "mov",
            "r9d",
            "edi",
            "mov",
            "r8d",
            "esi",
            "mov",
            "esi",
            "eax",
            "lea",
            "rax",
            "CONST",
            "mov",
            "rdi",
            "rax",
            "mov",
            "eax",
            "CONST",
            "call",
            "callfunc_xxx",
            "mov",
            "eax",
            "CONST",
            "mov",
            "rdx",
            "[rbp+var_xxx]",
            "sub",
            "rdx",
            "fs:xxx",
            "jz",
            "JUMP_ADDR_EXCEEDED",
            "call",
            "callfunc_xxx",
            "leave",
            "retn"
        ],
        "call_to": {
            "876aa89699ec4a3b956c2f5c9cb6a58a": [
                34
            ],
            "477403d4ef5341d784e1d29850128051": [
                73,
                155,
                289,
                487,
                758
            ],
            "01d82d860fbe47d5bb6bf59a18cc89c1": [
                771
            ]
        },
        "call_external": {},
        "function_name": "main",
        "function_addr": 4553
    },
    "a4b6f2ec88004c9f9689ea42b91d48a0": {
        "token_sequence": [
            "endbr64",
            "push",
            "rbp",
            "mov",
            "rbp",
            "rsp",
            "sub",
            "rsp",
            "CONST",
            "mov",
            "[rbp+var_xxx]",
            "edi",
            "mov",
            "[rbp+var_xxx]",
            "esi",
            "cmp",
            "[rbp+var_xxx]",
            "CONST",
            "jnz",
            "JUMP_ADDR_53",
            "cmp",
            "[rbp+var_xxx]",
            "CONST",
            "jnz",
            "JUMP_ADDR_53",
            "lea",
            "rax",
            "CONST",
            "mov",
            "rdi",
            "rax",
            "call",
            "callfunc_xxx",
            "lea",
            "rax",
            "CONST",
            "mov",
            "rdx",
            "rax",
            "lea",
            "rax",
            "CONST",
            "mov",
            "rsi",
            "rax",
            "mov",
            "rax",
            "callfunc_xxx",
            "mov",
            "rdi",
            "rax",
            "call",
            "callfunc_xxx",
            "nop",
            "leave",
            "retn"
        ],
        "call_to": {
            "a024e9d3532d411ebcf21609115d015d": [
                32
            ],
            "16c2bde27bb4456aaac412c68faaade8": [
                52
            ]
        },
        "call_external": {
            "std::ios_base::Init::~Init()": [
                47
            ]
        },
        "function_name": "_Z41__static_initialization_and_destruction_0ii",
        "function_addr": 5447
    },
    "5d0b1fcd919e4cd38e649e15670baf28": {
        "token_sequence": [
            "endbr64",
            "push",
            "rbp",
            "mov",
            "rbp",
            "rsp",
            "mov",
            "esi",
            "CONST",
            "mov",
            "edi",
            "CONST",
            "call",
            "callfunc_xxx",
            "pop",
            "rbp",
            "retn"
        ],
        "call_to": {
            "a4b6f2ec88004c9f9689ea42b91d48a0": [
                13
            ]
        },
        "call_external": {},
        "function_name": "_GLOBAL__sub_I_main",
        "function_addr": 5533
    }
}